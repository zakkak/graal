name: Quarkus tests

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'README-Mandrel.md'
      - 'CONTRIBUTING.md'
      - 'SECURITY.md'
      - 'LICENSE'
      - '.github/ISSUE_TEMPLATE/**'
      - '.travis.yml'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - 'docs/src/main/asciidoc/**'
      - 'README.md'
      - 'README-Mandrel.md'
      - 'CONTRIBUTING.md'
      - 'SECURITY.md'
      - 'LICENSE'
      - '.github/ISSUE_TEMPLATE/**'
      - '.travis.yml'

env:
  # Workaround testsuite locale issue
  LANG: en_US.UTF-8
  DB_USER: hibernate_orm_test
  DB_PASSWORD: hibernate_orm_test
  DB_NAME: hibernate_orm_test
  NATIVE_TEST_MAVEN_OPTS: "-B --settings ${QUARKUS_PATH}/.github/mvn-settings.xml --fail-at-end -Dtest-containers -Dstart-containers -Dnative-image.xmx=5g -Dnative -Dnative.surefire.skip -Dformat.skip -Dno-descriptor-tests install -DskipDocs"
  MX_GIT_CACHE: refcache
  JAVA_HOME: ${{ github.workspace }}/openjdk
  MANDREL_REPO: ${{ github.workspace }}
  MANDREL_HOME: ${{ github.workspace }}/../mandrelvm
  MX_HOME: ${{ github.workspace }}/../mx
  QUARKUS_PATH: ${{ github.workspace }}/quarkus

jobs:
  build-mandrel:
    name: Mandrel build - OpenJDK11-${{ matrix.jdk }}
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        jdk: ['ga', 'ea']
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
        path: mandrel
    - uses: actions/checkout@v1
      with:
        repository: graalvm/mx.git
        ref: master
        path: mx
    - uses: actions/checkout@v1
      with:
        repository: graalvm/mandrel-packaging.git
        ref: 21.1
        path: mandrel-packaging
    - uses: actions/cache@v1
      with:
        path: ~/.mx
        key: ${{ runner.os }}-mx-${{ hashFiles('**/suite.py') }}
        restore-keys: ${{ runner.os }}-mx-
    - name: Get OpenJDK 11 with static libs
      run: |
        curl -sL https://api.adoptopenjdk.net/v3/binary/latest/11/${{ matrix.jdk }}/linux/x64/jdk/hotspot/normal/openjdk -o jdk.tar.gz
        curl -sL https://api.adoptopenjdk.net/v3/binary/latest/11/${{ matrix.jdk }}/linux/x64/staticlibs/hotspot/normal/openjdk -o jdk-static-libs.tar.gz
        mkdir -p ${JAVA_HOME}
        tar xf jdk.tar.gz -C ${JAVA_HOME} --strip-components=1
        tar xf jdk-static-libs.tar.gz -C ${JAVA_HOME} --strip-components=1
        echo ${JAVA_HOME}
        ${JAVA_HOME}/bin/java --version
    - name: Build Mandrel
      run: |
        cd ${{ github.workspace }}/../mandrel-packaging
        ${JAVA_HOME}/bin/java -ea build.java --mx-home ${MX_HOME} --mandrel-repo ${MANDREL_REPO} --mandrel-home ${MANDREL_HOME} --archive-suffix tar.gz
        ${MANDREL_HOME}/bin/native-image --version
        mv mandrel-java11-linux-amd64-*.tar.gz ${{ github.workspace }}/mandreljdk-${{ matrix.jdk }}.tgz
    - name: Persist Mandrel build
      uses: actions/upload-artifact@v2
      with:
        name: mandreljdk-${{ matrix.jdk }}
        path: mandreljdk-${{ matrix.jdk }}.tgz

  get-quarkus-versions:
    name: Get Quarkus versions
    runs-on: ubuntu-18.04
    outputs:
      build-matrix: ${{ steps.versions.outputs.build-matrix }}
      tests-matrix: ${{ steps.versions.outputs.tests-matrix }}
    steps:
    - name: Get Quarkus versions
      id: versions
      run: |
        quarkus_latest=$(curl https://repo1.maven.org/maven2/io/quarkus/quarkus-bom/maven-metadata.xml | awk -F"[<>]" '/latest/ {print $3}')
        echo ${quarkus_latest}
        build_json=$(jq -n --arg version ${quarkus_latest} '{"jdk": ["ga", "ea"], "quarkus-version": [$version, "master"]}' | tr -d '\n')
        echo ${build_json}
        echo "::set-output name=build-matrix::${build_json}"
        curl --output quarkus-release.tgz -sL https://api.github.com/repos/quarkusio/quarkus/tarball/${quarkus_latest}
        tar xf quarkus-release.tgz --wildcards --strip-components=2 '*/native-tests.json'
        jq --arg version ${quarkus_latest} '.include[] += {"quarkus-version": $version}' native-tests.json > release-tests.json
        curl --output quarkus-master.tgz -sL https://api.github.com/repos/quarkusio/quarkus/tarball/master
        tar xf quarkus-master.tgz --wildcards --strip-components=2 '*/native-tests.json'
        jq '.include[] += {"quarkus-version": "master"}' native-tests.json > master-tests.json
        jq -s '.[0].include += .[1].include | .[0]' release-tests.json master-tests.json > native-tests.json
        tests_json=$(jq --arg version ${quarkus_latest} '{"jdk": ["ga", "ea"], "quarkus-version": [$version, "master"]} + .' native-tests.json | tr -d '\n')
        echo ${tests_json}
        echo "::set-output name=tests-matrix::${tests_json}"

  build-quarkus:
    name: Quarkus ${{ matrix.quarkus-version }} - ${{ matrix.jdk }} OpenJDK11
    runs-on: ubuntu-18.04
    needs:
      - get-quarkus-versions
      - build-mandrel
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.get-quarkus-versions.outputs.build-matrix) }}
    steps:
    - name: Get quarkus
      run: |
        curl --output quarkus.tgz -sL https://api.github.com/repos/quarkusio/quarkus/tarball/${{ matrix.quarkus-version }}
        mkdir -p ${QUARKUS_PATH}
        tar xf quarkus.tgz -C ${QUARKUS_PATH} --strip-components=1
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-${{ matrix.quarkus-version }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-${{ matrix.quarkus-version }}-maven-
    - name: Download Mandrel build
      uses: actions/download-artifact@v1
      with:
        name: mandreljdk-${{ matrix.jdk }}
        path: .
    - name: Extract Mandrel build
      shell: bash
      run: tar -xzvf mandreljdk-${{ matrix.jdk }}.tgz -C ~
    - name: Build quarkus
      run: |
        export JAVA_HOME="${HOME}/mandrelvm"
        cd ${QUARKUS_PATH}
        mvn -e -B -Dquickly
    - name: Tar Maven Repo
      shell: bash
      run: tar -czvf maven-repo-${{ matrix.quarkus-version }}-${{ matrix.jdk }}.tgz -C ~ .m2/repository
    - name: Persist Maven Repo
      uses: actions/upload-artifact@v2
      with:
        name: maven-repo-${{ matrix.quarkus-version }}-${{ matrix.jdk }}
        path: maven-repo-${{ matrix.quarkus-version }}-${{ matrix.jdk }}.tgz
    - name: Delete Local Artifacts From Cache
      shell: bash
      run: rm -r ~/.m2/repository/io/quarkus

  native-tests:
    name: ${{ matrix.quarkus-version }} - ${{ matrix.category }} - ${{ matrix.jdk }} OpenJDK11
    needs:
      - build-mandrel
      - build-quarkus
      - get-quarkus-versions
    runs-on: ubuntu-18.04
    # Ignore the following YAML Schema error
    timeout-minutes: ${{matrix.timeout}}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.get-quarkus-versions.outputs.tests-matrix) }}
    steps:
      - name: Download Maven Repo
        uses: actions/download-artifact@v1
        with:
          name: maven-repo-${{ matrix.quarkus-version }}-${{ matrix.jdk }}
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzvf maven-repo-${{ matrix.quarkus-version }}-${{ matrix.jdk }}.tgz -C ~
      - name: Download Mandrel build
        uses: actions/download-artifact@v1
        with:
          name: mandreljdk-${{ matrix.jdk }}
          path: .
      - name: Extract Mandrel build
        shell: bash
        run: tar -xzvf mandreljdk-${{ matrix.jdk }}.tgz -C ~
      - name: Get quarkus
        run: |
          curl --output quarkus.tgz -sL https://api.github.com/repos/quarkusio/quarkus/tarball/${{ matrix.quarkus-version }}
          mkdir -p ${QUARKUS_PATH}
          tar xf quarkus.tgz -C ${QUARKUS_PATH} --strip-components=1
      - name: Reclaim disk space
        run: ${QUARKUS_PATH}/.github/ci-prerequisites.sh
      - name: Build with Maven
        env:
          TEST_MODULES: ${{matrix.test-modules}}
          CATEGORY: ${{matrix.category}}
        run: |
          cd ${QUARKUS_PATH}
          export JAVA_HOME="${HOME}/mandrelvm"
          export GRAALVM_HOME="${HOME}/mandrelvm"
          ${GRAALVM_HOME}/bin/native-image --version
          for i in $TEST_MODULES
          do modules+=("integration-tests/$i"); done
          IFS=,
          eval mvn -pl "${modules[*]}" $NATIVE_TEST_MAVEN_OPTS
          # add the 'simple with spaces' project to the run of 'Misc1' by executing it explicitly
          # done because there is no good way to pass strings with empty values to the previous command
          # so this hack is as good as any
          if [ "$CATEGORY" == "Misc1" ]; then
            mvn -Dnative -B --settings .github/mvn-settings.xml -f 'integration-tests/simple with space/' verify
          fi
      - name: Prepare failure archive (if maven failed)
        if: failure()
        shell: bash
        run: find . -type d -name '*-reports' -o -wholename '*/build/reports/tests/functionalTest' | tar -czf test-reports.tgz -T -
      - name: Upload failure Archive (if maven failed)
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-reports-native-${{matrix.category}}
          path: 'test-reports.tgz'
